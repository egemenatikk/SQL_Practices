Table: Employee

+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| id           | int     |
| name         | varchar |
| salary       | int     |
| departmentId | int     |
+--------------+---------+
id is the primary key column for this table.
departmentId is a foreign key of the ID from the Department table.
Each row of this table indicates the ID, name, and salary of an employee. It also contains the ID of their department.
 

Table: Department

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| name        | varchar |
+-------------+---------+
id is the primary key column for this table.
Each row of this table indicates the ID of a department and its name.
 

A company's executives are interested in seeing who earns the most money in each of the company's departments. A high earner in a department is an employee who has a salary in the top three unique salaries for that department.

Write an SQL query to find the employees who are high earners in each of the departments.

Return the result table in any order.

-------------------------------------------------------------------------------------------

SQL Query

SELECT d1.name AS 'Department', e1.name AS 'Employee', e1.salary AS 'Salary'
FROM Employee e1
INNER JOIN Department d1 ON e1.departmentId = d1.id
WHERE e1.salary >= (SELECT IF((SELECT COUNT(e3.id) FROM Employee e3 GROUP BY e3.departmentId HAVING e3.departmentId = d1.id) > 2, 
                    (SELECT DISTINCT e2.salary
                    FROM Employee e2
                    WHERE e2.departmentId = d1.id
                    ORDER BY e2.salary DESC
                    LIMIT 1 OFFSET 2)
                    , 0));